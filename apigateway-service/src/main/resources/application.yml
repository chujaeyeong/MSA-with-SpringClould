server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-service

#  config 클래스를 사용하지 않고 application.yml에 필터를 추가하는 방법
  cloud:
    gateway:
      routes:
        - id: first-service
          uri: lb://MY-FIRST-SERVICE    # localhost 포트번호 -> eureka 서버에서 클라이언트 요청 정보를 전달받는 방식으로 변경
          predicates:
            - Path=/first-service/**
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter        # CustomFilter 클래스 사용해서 커스텀 필터 적용
        - id: second-service
          uri: lb://MY-SECOND-SERVICE   # localhost 포트번호 -> eureka 서버에서 클라이언트 요청 정보를 전달받는 방식으로 변경
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter        # CustomFilter 클래스 사용해서 커스텀 필터 적용
            - name: LoggingFilter       # Second Service 에만 Logging 필터 적용
              args:
                baseMessage: Hi, there
                preLogger: true
                postLogger: true

      # Global Filter
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true